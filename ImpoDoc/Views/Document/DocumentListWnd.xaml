<Window x:Class="ImpoDoc.Views.Document.DocumentListWnd"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:common="clr-namespace:ImpoDoc.Common"
        xmlns:res="clr-namespace:ImpoDoc.Properties"
        mc:Ignorable="d"
        Background="#FFEEF5FD"
        Title="Список документів" Height="450" Width="780"
        WindowStartupLocation="CenterOwner">

    <Window.Resources>
        <ResourceDictionary Source="/ImpoDoc;component/Properties/IconDictionary.xaml" />
    </Window.Resources>
    <Window.DataContext>
        <Binding Mode="OneWay" Path="DocumentVM" Source="{StaticResource Locator}"/>
    </Window.DataContext>

    <extToolkit:BusyIndicator BusyContent="{Binding Path=(common:BusyStatus.Content)}" IsBusy="{Binding Path=(common:BusyStatus.IsBusy)}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="18" />
                <RowDefinition Height="36" />
                <RowDefinition />
                <RowDefinition Height="24" />
            </Grid.RowDefinitions>

            <Menu Background="{x:Null}">
                <MenuItem Header="Документ" Foreground="Black">
                    <MenuItem Header="{x:Static res:Resources.Create}" Command="{Binding Command, ElementName=createBtn}" />
                    <Separator />
                    <MenuItem Header="{x:Static res:Resources.Exit}" />
                </MenuItem>
                <MenuItem Header="Правка">
                    <MenuItem Header="Редагувати" Command="{Binding Command, ElementName=viewBtn}"
                                  IsEnabled="{Binding SelectedDocuments.Count, Mode=OneWay}" />
                    <MenuItem Header="{x:Static res:Resources.Delete}" Command="{Binding Command, ElementName=delBtn}"
                                  IsEnabled="{Binding SelectedDocuments.Count, Mode=OneWay}" />

                </MenuItem>
                <MenuItem Header="Довідники">
                    <MenuItem Header="{x:Static res:Resources.Employees}" Command="{Binding ViewEmployeeListCommand}" />
                    <MenuItem Header="Підприємства" Command="{Binding ViewCompanyListCommand}" />
                </MenuItem>
                <MenuItem Header="{x:Static res:Resources.Help}">
                    <MenuItem Header="{x:Static res:Resources.AboutApp}" />
                </MenuItem>
            </Menu>

            <ToolBarTray Height="36" Grid.Row="1" VerticalAlignment="Top" DataContext="{Binding CurrentVM}" Grid.ColumnSpan="2" >
                <ToolBar Height="36" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  >
                    <Button x:Name="viewBtn" ToolTip="{x:Static res:Resources.View}" Command="{Binding ViewItemDetailsCommand}">
                        <Path Stretch="Uniform" Fill="#FF000000"  Data="{DynamicResource UserIcon}" />
                    </Button>
                    <Button x:Name="createBtn" ToolTip="{x:Static res:Resources.Create}" Command="{Binding CreateItemCommand}">
                        <Path Stretch="Uniform" Fill="#FF000000" Data="{DynamicResource UserAddIcon}"/>
                    </Button>
                    <Button x:Name="delBtn" ToolTip="{x:Static res:Resources.Delete}" Command="{Binding RemoveItemCommand}">
                        <Path Stretch="Uniform" Fill="#FF000000" Data="{DynamicResource UserDeleteIcon}"/>
                    </Button>
                    <Separator />
                    <TextBlock Text="{x:Static res:Resources.Filter}" Margin="0,7,0,4" ></TextBlock>
                    <ComboBox IsReadOnly="True" SelectedValuePath="Key" SelectedValue="{Binding FilterType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="150" ItemsSource="{Binding FilterList}" DisplayMemberPath="Value" SelectedIndex="0" />
                    <TextBox Style="{StaticResource placeHolder}" Tag="Введіть значення..." Width="150" Margin="0,5,0,4" Text="{Binding FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </ToolBar>
            </ToolBarTray>

            <TabControl 
                Grid.Row="2"
                Background="#FFEEF5FD"
                VerticalAlignment="Stretch" 
                HorizontalAlignment="Stretch"
                SelectedValue="{Binding CurrentSection}"
                SelectedValuePath="Tag" Grid.ColumnSpan="2">

                <TabItem Tag="IncomingDocListVM" Header="Вхідні" DataContext="{Binding IncomingDocListVM, Mode=OneWay, Source={StaticResource Locator}}">
                    <DataGrid
                      Name="IncomingDocList"  
                      ItemsSource="{Binding ItemsViewSource.View}"  
                      SelectedItem="{Binding SelectedItem}"
                      VerticalAlignment="Stretch" 
                      HorizontalAlignment="Stretch" 
                      Margin="0,10,0,0" 
                      AutoGenerateColumns="False" 
                      GridLinesVisibility="Horizontal" 
                      SelectionMode="Single" 
                      IsReadOnly="True" 
                      Focusable="False">

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Дата документу" Width="175" Binding="{Binding CreatedAt}" />
                            <DataGridTextColumn Header="Індекс" Width="100" Binding="{Binding OutgoingIndex}" />
                            <DataGridTextColumn Header="Індекс кореспондента" Width="200" Binding="{Binding IncomingIndex}" />
                            <DataGridTextColumn Header="Назва документу" Width="200" Binding="{Binding Name}" />
                            <DataGridTextColumn Header="Кореспондент" Width="150" Binding="{Binding Correspondent.Title}" />
                            <DataGridTextColumn Header="Дата надходження" Width="150" Binding="{Binding ReceivedAt}" SortDirection="Descending" />
                            <DataGridTextColumn Header="Тип документу" Width="150" Binding="{Binding DocumentType}" />
                        </DataGrid.Columns>

                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderThickness" Value="0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>

                        <DataGrid.VerticalGridLinesBrush>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.InactiveBorderColorKey}}"/>
                        </DataGrid.VerticalGridLinesBrush>
                        <DataGrid.HorizontalGridLinesBrush>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.InactiveBorderColorKey}}"/>
                        </DataGrid.HorizontalGridLinesBrush>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding ViewItemDetailsCommand, Mode=OneWay}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                    </DataGrid>
                </TabItem>
                <TabItem Tag="OutgoingDocListVM" Header="Вихідні"  DataContext="{Binding OutgoingDocListVM, Mode=OneWay}">
                    <DataGrid
                      Name="OutgoingDocList"  
                      ItemsSource="{Binding ItemsViewSource.View}"  
                      SelectedItem="{Binding SelectedItem}"
                      VerticalAlignment="Stretch" 
                      HorizontalAlignment="Stretch" 
                      Margin="0,10,0,0" 
                      AutoGenerateColumns="False" 
                      GridLinesVisibility="Horizontal" 
                      SelectionMode="Single" 
                      IsReadOnly="True" 
                      Focusable="False">

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Дата документу" Width="175" Binding="{Binding CreatedAt}" />
                            <DataGridTextColumn Header="Індекс" Width="100" Binding="{Binding OutgoingIndex}" />
                            <DataGridTextColumn Header="Індекс кореспондента" Width="200" Binding="{Binding IncomingIndex}" />
                            <DataGridTextColumn Header="Назва документу" Width="200" Binding="{Binding Name}" />
                            <DataGridTextColumn Header="Кореспондент" Width="150" Binding="{Binding Correspondent.Title}" />
                            <DataGridTextColumn Header="Дата надходження" Width="150" Binding="{Binding ReceivedAt}" SortDirection="Descending" />
                            <DataGridTextColumn Header="Тип документу" Width="150" Binding="{Binding DocumentType}" />
                        </DataGrid.Columns>

                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderThickness" Value="0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>

                        <DataGrid.VerticalGridLinesBrush>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.InactiveBorderColorKey}}"/>
                        </DataGrid.VerticalGridLinesBrush>
                        <DataGrid.HorizontalGridLinesBrush>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.InactiveBorderColorKey}}"/>
                        </DataGrid.HorizontalGridLinesBrush>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding ViewItemDetailsCommand, Mode=OneWay}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                    </DataGrid>
                </TabItem>
                <TabItem Tag="InternalDocListVM" Header="Внутрішні" DataContext="{Binding InternalDocListVM, Mode=OneWay}">
                    <DataGrid
                      Name="InternalDocList"  
                      ItemsSource="{Binding ItemsViewSource.View}"  
                      SelectedItem="{Binding SelectedItem}"
                      VerticalAlignment="Stretch" 
                      HorizontalAlignment="Stretch" 
                      Margin="0,10,0,0" 
                      AutoGenerateColumns="False" 
                      GridLinesVisibility="Horizontal" 
                      SelectionMode="Single" 
                      IsReadOnly="True" 
                      Focusable="False">

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Дата документу" Width="175" Binding="{Binding CreatedAt}" />
                            <DataGridTextColumn Header="Індекс адресанта" Width="100" Binding="{Binding OutgoingIndex}" />
                            <DataGridTextColumn Header="Індекс адресата" Width="200" Binding="{Binding IncomingIndex}" />
                            <DataGridTextColumn Header="Назва документу" Width="200" Binding="{Binding Name}" />
                            <DataGridTextColumn Header="Адресат" Width="150" Binding="{Binding Addressee.DisplayName}" />
                            <DataGridTextColumn Header="Адресант" Width="150" Binding="{Binding Addresser.DisplayName}" SortDirection="Descending" />
                            <DataGridTextColumn Header="Дата надходження" Width="150" Binding="{Binding ReceivedAt}" />
                            <DataGridTextColumn Header="Тип документу" Width="150" Binding="{Binding DocumentType}" />
                        </DataGrid.Columns>

                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderThickness" Value="0" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>

                        <DataGrid.VerticalGridLinesBrush>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.InactiveBorderColorKey}}"/>
                        </DataGrid.VerticalGridLinesBrush>
                        <DataGrid.HorizontalGridLinesBrush>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.InactiveBorderColorKey}}"/>
                        </DataGrid.HorizontalGridLinesBrush>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding ViewItemDetailsCommand, Mode=OneWay}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                    </DataGrid>

                </TabItem>
            </TabControl>

            <StatusBar DataContext="{Binding CurrentVM}" Grid.Row="3" VerticalAlignment="Stretch" Background="#FFEEF5FD" Grid.ColumnSpan="2" >
                <TextBlock Name="StatusText" Text="{Binding StatusText}"></TextBlock>
            </StatusBar>
        </Grid>
    </extToolkit:BusyIndicator>
</Window>
