<Window x:Class="ImpoDoc.Views.EmployeeListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:common="clr-namespace:ImpoDoc.Common"
        xmlns:res="clr-namespace:ImpoDoc.Properties"
        mc:Ignorable="d"
        Title="{x:Static res:Resources.EmployeeListTitle}" 
        Height="450" 
        Width="800" 
        Background="#FFEEF5FD"
        WindowStartupLocation="CenterOwner" 
        DataContext="{Binding EmployeeListVM, Mode=OneWay, Source={StaticResource Locator}}" Visibility="Visible">

    <Window.Resources>
        <ResourceDictionary Source="/ImpoDoc;component/Properties/ApplicationDictionary.xaml" />
    </Window.Resources>

    <extToolkit:BusyIndicator BusyContent="{Binding Path=(common:BusyStatus.Content)}" IsBusy="{Binding Path=(common:BusyStatus.IsBusy)}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="36" />
                <RowDefinition />
                <RowDefinition Height="24" />
            </Grid.RowDefinitions>

            <ToolBarTray Height="36" Grid.Row="0" VerticalAlignment="Top" >
                <ToolBar Height="36" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  >
                    <Button ToolTip="{x:Static res:Resources.ViewButtonTooltip}" Command="{Binding ViewItemDetailsCommand}">
                        <Path Stretch="Uniform" Fill="#FF000000"  Data="{DynamicResource UserIcon}" />
                    </Button>
                    <Button ToolTip="{x:Static res:Resources.CreateButtonTooltip}" Command="{Binding CreateItemCommand}">
                        <Path Stretch="Uniform" Fill="#FF000000" Data="{DynamicResource UserAddIcon}"/>
                    </Button>
                    <Button ToolTip="{x:Static res:Resources.RemoveButtonTooltip}" Command="{Binding RemoveItemCommand}">
                        <Path Stretch="Uniform" Fill="#FF000000" Data="{DynamicResource UserDeleteIcon}"/>
                    </Button>
                    <Separator />
                    <TextBlock Text="{x:Static res:Resources.FilterLabel}" Margin="0,7,0,4" ></TextBlock>
                    <ComboBox IsReadOnly="True" SelectedValuePath="Key" SelectedValue="{Binding FilterType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="150" ItemsSource="{Binding FilterList}" DisplayMemberPath="Value" SelectedIndex="0" BorderBrush="LightGray" />
                    <TextBox Style="{StaticResource placeHolder}" Tag="{x:Static res:Resources.FilterPlaceholderText}" Width="150" Margin="0,5,0,4" Text="{Binding FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </ToolBar>
            </ToolBarTray>

            <DataGrid Grid.Row="1" 
                      Name="EmployeeList"  
                      ItemsSource="{Binding ItemsViewSource.View}"  
                      SelectedItem="{Binding SelectedItem}"
                      VerticalAlignment="Stretch" 
                      HorizontalAlignment="Stretch" 
                      Margin="0,10,0,0" 
                      AutoGenerateColumns="False" 
                      GridLinesVisibility="Horizontal" 
                      SelectionMode="Single" 
                      IsReadOnly="True" 
                      Focusable="False">

                <DataGrid.Columns>
                    <DataGridTextColumn Header="{x:Static res:Resources.EmployeeLastName}" Width="100" Binding="{Binding LastName}" SortDirection="Ascending"/>
                    <DataGridTextColumn Header="{x:Static res:Resources.EmployeeFirstName}" Width="100" Binding="{Binding FirstName}" />
                    <DataGridTextColumn Header="{x:Static res:Resources.EmployeeMiddleName}" Width="100" Binding="{Binding MiddleName}" />
                    <DataGridTextColumn Header="{x:Static res:Resources.EmployeeDepartment}" Width="100" Binding="{Binding Department}" />
                    <DataGridTextColumn Header="{x:Static res:Resources.EmployeeEmail}" Width="100" Binding="{Binding Email}" />
                    <DataGridTextColumn Header="{x:Static res:Resources.EmployeePhoneNumber}" Width="100" Binding="{Binding PhoneNumber}" />
                </DataGrid.Columns>

                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderThickness" Value="0" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.VerticalGridLinesBrush>
                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.InactiveBorderColorKey}}"/>
                </DataGrid.VerticalGridLinesBrush>
                <DataGrid.HorizontalGridLinesBrush>
                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.InactiveBorderColorKey}}"/>
                </DataGrid.HorizontalGridLinesBrush>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding ViewItemDetailsCommand, Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </DataGrid>

            <StatusBar Grid.Row="2" VerticalAlignment="Stretch" Background="#FFEEF5FD" >
                <TextBlock Name="StatusText" Text="{Binding StatusText}"></TextBlock>
            </StatusBar>
        </Grid>
    </extToolkit:BusyIndicator>
</Window>